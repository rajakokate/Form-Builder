{"ast":null,"code":"// import React, { useState } from \"react\";\n// import { useNavigate } from \"react-router-dom\";\n// import axios from \"axios\";\n\n// const CreateForm = () => {\n//   const [title, setTitle] = useState(\"Untitled Form\"); // initial form title;\n//   const [inputs, setInputs] = useState([]); //state for managing input fields\n//   const [isEditing, setIsEditing] = useState(false); // state to toggle form editor\n//   const [showInputOptions, setShowInputOptions] = useState(false); // state toggle input options\n//   const [editingIndex, setEditingIndex] = useState(null); // index of the input field\n//   const [currentTitle, setCurrentTitle] = useState(\"\"); // title of the input being edited\n//   const [currentPlaceholder, setCurrentPlaceholder] = useState(\"\");\n//   const navigate = useNavigate();\n\n//   // toggle visibility of input type buttons\n//   const toggleInputOptions = () => {\n//     setShowInputOptions(!showInputOptions);\n//   };\n\n//   // Handle adding a new input field\n//   const addInput = (type) => {\n//     if (inputs.length < 20) {\n//       // limit to 20 inputs\n//       setInputs([...inputs, { type, title: \"\", placeholder: \"\" }]);\n//     }\n//   };\n\n//   // handle editing an input field\n//   const editButtonHandler = (index) => {\n//     setIsEditing(true);\n//     setEditingIndex(index) // set the index of the input field being edited\n//     setCurrentTitle(inputs[index].title)\n//     setCurrentPlaceholder(inputs[[index].placeholder]); \n//   }\n\n//   // Handle deleting an input field\n//   const deleteInput = (index) => {\n//     const newInputs = inputs.filter((_, i) => i !== index);\n//   };\n\n//   // Handle updating the selected input field\n//   const handleUpdateInput = ()=>{\n//     const newInputs = [...inputs];\n//     newInputs(editingIndex) = {\n//         ...newInputs[editingIndex],\n//         title: currentTitle,\n//         placeholder: currentPlaceholder\n//     }\n//     setInputs(newInputs);\n//     setIsEditing(false);\n//     setEditingIndex(null); // clear the editing index\n//   }\n\n//   // Handle Form submission\n//   const handleCreateForm = () => {\n//     // for now just navigate to the home page\n//     navigate(\"/\");\n//   };\n\n//   return (\n//     <div>\n//       <h1>Create New form</h1>\n//       <div\n//         style={{ display: \"flex\", padding: \"20px\", border: \"1px solid #ccc\" }}\n//       >\n//         {/* left container */}\n//         <div\n//           style={{ flex: 1, padding: \"10px\", borderRight: \"1px solid #ccc\" }}\n//         >\n//           <div style={{ display: \"flex\", alignItems: \"center\" }}>\n//             <h2>{title}</h2>\n//             <button onClick={() => setIsEditing(!isEditing)}>Edit</button>\n//           </div>\n\n//           {inputs.map((input, index) => (\n//             <div key={index} style={{ marginBottom: \"10px\" }}>\n//               <input\n//                 type={input.type}\n//                 value={input.title}\n//                 placeholder={input.placeholder}\n//                 readOnly\n//                 style={{ width: \"100%\", marginBottom: \"5px\" }}\n//               />\n//               <button onClick={() => editButtonHandler(index)}>Edit</button>\n//               <button onClick={() => deleteInput(index)}>Delete</button>\n//             </div>\n//           ))}\n\n//           <div>\n//             <button type=\"button\" onClick={toggleInputOptions}>\n//               {showInputOptions ? \"CLOSE ADD INPUT\" : \"ADD INPUT\"}\n//             </button>\n//           </div>\n//           <div>\n//             {showInputOptions && (\n//               <div style={{ marginTop: \"10px\" }}>\n//                 <button type=\"button\" onClick={() => addInput(\"text\")}>\n//                   Text\n//                 </button>\n//                 <button type=\"button\" onClick={() => addInput(\"number\")}>\n//                   Number\n//                 </button>\n//                 <button type=\"button\" onClick={() => addInput(\"email\")}>\n//                   Email\n//                 </button>\n//                 <button type=\"button\" onClick={() => addInput(\"password\")}>\n//                   Password\n//                 </button>\n//                 <button type=\"button\" onClick={() => addInput(\"date\")}>\n//                   Date\n//                 </button>\n//               </div>\n//             )}\n//           </div>\n//         </div>\n//         {/* right container */}\n\n//         <div style={{ flex: 1, padding: \"10px\" }}>\n//           {/* right container content */}\n//           <h2>Form Editor</h2>\n//           {isEditing ? (\n//             <label>\n//               Title:\n//               <input\n//                 type=\"text\"\n//                 value={title}\n//                 onChange={(e) => setTitle(e.target.value)}\n//                 placeholder=\"Title\"\n//               />\n//             </label>\n//           ) : (\n//             <p>Select to see editor</p>\n//           )}\n//         </div>\n//       </div>\n\n//       <button\n//         type=\"button\"\n//         onClick={handleCreateForm}\n//         style={{ marginTop: \"20px\" }}\n//       >\n//         Create Form\n//       </button>\n//     </div>\n//   );\n// };\n\n// export default CreateForm;","map":{"version":3,"names":[],"sources":["C:/formbuilder/client/src/pages/CreateForm.js"],"sourcesContent":["// import React, { useState } from \"react\";\r\n// import { useNavigate } from \"react-router-dom\";\r\n// import axios from \"axios\";\r\n\r\n// const CreateForm = () => {\r\n//   const [title, setTitle] = useState(\"Untitled Form\"); // initial form title;\r\n//   const [inputs, setInputs] = useState([]); //state for managing input fields\r\n//   const [isEditing, setIsEditing] = useState(false); // state to toggle form editor\r\n//   const [showInputOptions, setShowInputOptions] = useState(false); // state toggle input options\r\n//   const [editingIndex, setEditingIndex] = useState(null); // index of the input field\r\n//   const [currentTitle, setCurrentTitle] = useState(\"\"); // title of the input being edited\r\n//   const [currentPlaceholder, setCurrentPlaceholder] = useState(\"\");\r\n//   const navigate = useNavigate();\r\n\r\n//   // toggle visibility of input type buttons\r\n//   const toggleInputOptions = () => {\r\n//     setShowInputOptions(!showInputOptions);\r\n//   };\r\n\r\n//   // Handle adding a new input field\r\n//   const addInput = (type) => {\r\n//     if (inputs.length < 20) {\r\n//       // limit to 20 inputs\r\n//       setInputs([...inputs, { type, title: \"\", placeholder: \"\" }]);\r\n//     }\r\n//   };\r\n\r\n//   // handle editing an input field\r\n//   const editButtonHandler = (index) => {\r\n//     setIsEditing(true);\r\n//     setEditingIndex(index) // set the index of the input field being edited\r\n//     setCurrentTitle(inputs[index].title)\r\n//     setCurrentPlaceholder(inputs[[index].placeholder]); \r\n//   }\r\n\r\n//   // Handle deleting an input field\r\n//   const deleteInput = (index) => {\r\n//     const newInputs = inputs.filter((_, i) => i !== index);\r\n//   };\r\n\r\n\r\n//   // Handle updating the selected input field\r\n//   const handleUpdateInput = ()=>{\r\n//     const newInputs = [...inputs];\r\n//     newInputs(editingIndex) = {\r\n//         ...newInputs[editingIndex],\r\n//         title: currentTitle,\r\n//         placeholder: currentPlaceholder\r\n//     }\r\n//     setInputs(newInputs);\r\n//     setIsEditing(false);\r\n//     setEditingIndex(null); // clear the editing index\r\n//   }\r\n\r\n//   // Handle Form submission\r\n//   const handleCreateForm = () => {\r\n//     // for now just navigate to the home page\r\n//     navigate(\"/\");\r\n//   };\r\n\r\n//   return (\r\n//     <div>\r\n//       <h1>Create New form</h1>\r\n//       <div\r\n//         style={{ display: \"flex\", padding: \"20px\", border: \"1px solid #ccc\" }}\r\n//       >\r\n//         {/* left container */}\r\n//         <div\r\n//           style={{ flex: 1, padding: \"10px\", borderRight: \"1px solid #ccc\" }}\r\n//         >\r\n//           <div style={{ display: \"flex\", alignItems: \"center\" }}>\r\n//             <h2>{title}</h2>\r\n//             <button onClick={() => setIsEditing(!isEditing)}>Edit</button>\r\n//           </div>\r\n\r\n//           {inputs.map((input, index) => (\r\n//             <div key={index} style={{ marginBottom: \"10px\" }}>\r\n//               <input\r\n//                 type={input.type}\r\n//                 value={input.title}\r\n//                 placeholder={input.placeholder}\r\n//                 readOnly\r\n//                 style={{ width: \"100%\", marginBottom: \"5px\" }}\r\n//               />\r\n//               <button onClick={() => editButtonHandler(index)}>Edit</button>\r\n//               <button onClick={() => deleteInput(index)}>Delete</button>\r\n//             </div>\r\n//           ))}\r\n\r\n//           <div>\r\n//             <button type=\"button\" onClick={toggleInputOptions}>\r\n//               {showInputOptions ? \"CLOSE ADD INPUT\" : \"ADD INPUT\"}\r\n//             </button>\r\n//           </div>\r\n//           <div>\r\n//             {showInputOptions && (\r\n//               <div style={{ marginTop: \"10px\" }}>\r\n//                 <button type=\"button\" onClick={() => addInput(\"text\")}>\r\n//                   Text\r\n//                 </button>\r\n//                 <button type=\"button\" onClick={() => addInput(\"number\")}>\r\n//                   Number\r\n//                 </button>\r\n//                 <button type=\"button\" onClick={() => addInput(\"email\")}>\r\n//                   Email\r\n//                 </button>\r\n//                 <button type=\"button\" onClick={() => addInput(\"password\")}>\r\n//                   Password\r\n//                 </button>\r\n//                 <button type=\"button\" onClick={() => addInput(\"date\")}>\r\n//                   Date\r\n//                 </button>\r\n//               </div>\r\n//             )}\r\n//           </div>\r\n//         </div>\r\n//         {/* right container */}\r\n\r\n//         <div style={{ flex: 1, padding: \"10px\" }}>\r\n//           {/* right container content */}\r\n//           <h2>Form Editor</h2>\r\n//           {isEditing ? (\r\n//             <label>\r\n//               Title:\r\n//               <input\r\n//                 type=\"text\"\r\n//                 value={title}\r\n//                 onChange={(e) => setTitle(e.target.value)}\r\n//                 placeholder=\"Title\"\r\n//               />\r\n//             </label>\r\n//           ) : (\r\n//             <p>Select to see editor</p>\r\n//           )}\r\n//         </div>\r\n//       </div>\r\n\r\n//       <button\r\n//         type=\"button\"\r\n//         onClick={handleCreateForm}\r\n//         style={{ marginTop: \"20px\" }}\r\n//       >\r\n//         Create Form\r\n//       </button>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default CreateForm;\r\n"],"mappings":"AAAA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}